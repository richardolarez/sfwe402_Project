{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/pages/home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [firstName, setFirstName] = useState(null);\n  useEffect(() => {\n    // Retrieve the firstName and lastName from sessionStorage\n    const storedFirstName = sessionStorage.getItem('firstName');\n\n    // Update the state with the retrieved values\n    if (storedFirstName) {\n      setFirstName(storedFirstName);\n    }\n  }, []); // Empty dependency array means this effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome \", firstName, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"eDa7jQyLzk46KR1v9xvB8DevQYs=\");\n_c = Home;\n;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","firstName","setFirstName","storedFirstName","sessionStorage","getItem","children","style","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/pages/home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function Home() {\n    const [firstName, setFirstName] = useState<string | null>(null);\n\n    useEffect(() => {\n        // Retrieve the firstName and lastName from sessionStorage\n        const storedFirstName = sessionStorage.getItem('firstName');\n\n        // Update the state with the retrieved values\n        if (storedFirstName) {\n            setFirstName(storedFirstName);\n        }\n    }, []); // Empty dependency array means this effect runs once on component mount\n\n    return (\n        <div>\n            <div style={{\n                position: 'absolute',\n            }}>\n                <h1>Welcome {firstName}!</h1>\n                <p></p>\n            </div>\n        </div>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAgB,IAAI,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,eAAe,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;;IAE3D;IACA,IAAIF,eAAe,EAAE;MACjBD,YAAY,CAACC,eAAe,CAAC;IACjC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIL,OAAA;IAAAQ,QAAA,eACIR,OAAA;MAAKS,KAAK,EAAE;QACRC,QAAQ,EAAE;MACd,CAAE;MAAAF,QAAA,gBACER,OAAA;QAAAQ,QAAA,GAAI,UAAQ,EAACL,SAAS,EAAC,GAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7Bd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACZ,EAAA,CAvBuBD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAuB3B;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}