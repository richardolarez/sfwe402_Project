{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/pages/scholarships.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Container, CssBaseline, Typography, Box } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Avatar from '@mui/material/Avatar';\nimport SchoolIcon from '@mui/icons-material/School';\nimport { sha256 } from 'crypto-hash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#ab0520' // primary color\n    },\n    secondary: {\n      main: '#0c234b' // secondary color\n    }\n  }\n});\nconst columns = [{\n  field: 'scholarshipName',\n  headerName: 'Scholarship Name',\n  width: 200\n}, {\n  field: 'awardAmount',\n  headerName: 'Award Amount',\n  width: 150\n}, {\n  field: 'numberAvailable',\n  headerName: 'Number Available',\n  width: 180\n}, {\n  field: 'deadline',\n  headerName: 'Deadline',\n  width: 150\n}];\nexport default function Scholarships() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8000/getallscholarships/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Assuming the data structure is { scholarships: Scholarship[] }\n        if (data && data.scholarships) {\n          setRows(data.scholarships);\n        } else {\n          console.error('Invalid data structure in API response:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    try {\n      const password = data.get('password');\n      if (password !== null) {\n        const hashedPassword = await sha256(password);\n        console.log(\"Hashed Password\", hashedPassword);\n        const response = await axios.post('http://localhost:8000/login/', {\n          username: data.get('username'),\n          password: hashedPassword\n        });\n        console.log(response.data);\n        if (response.status === 200) {\n          // storing the DB keys in session storage for the user / student\n          for (const key in response.data) {\n            sessionStorage.setItem(key, response.data[key]);\n          }\n          window.location.href = '/home';\n        } else {\n          // Display error message\n          alert('Invalid username or password');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: defaultTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: 'url(/UofA1.jpeg)',\n        backgroundSize: 'cover',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'secondary.main'\n            },\n            children: /*#__PURE__*/_jsxDEV(SchoolIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Scholarships\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: 400,\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(DataGrid, {\n              rows: rows,\n              columns: columns,\n              checkboxSelection: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Scholarships, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = Scholarships;\nvar _c;\n$RefreshReg$(_c, \"Scholarships\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","Container","CssBaseline","Typography","Box","createTheme","ThemeProvider","Avatar","SchoolIcon","sha256","jsxDEV","_jsxDEV","defaultTheme","palette","primary","main","secondary","columns","field","headerName","width","Scholarships","_s","rows","setRows","fetchData","response","fetch","ok","Error","data","json","scholarships","console","error","handleSubmit","event","preventDefault","FormData","currentTarget","password","get","hashedPassword","log","axios","post","username","status","key","sessionStorage","setItem","window","location","href","alert","theme","children","style","backgroundImage","backgroundSize","height","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","m","bgcolor","variant","checkboxSelection","_c","$RefreshReg$"],"sources":["/app/frontend/src/pages/scholarships.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport { Container, CssBaseline, Typography, Box } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Avatar from '@mui/material/Avatar';\nimport SchoolIcon from '@mui/icons-material/School';\nimport Button from '@mui/material/Button';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { sha256 } from 'crypto-hash';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#ab0520', // primary color\n    },\n    secondary: {\n      main: '#0c234b', // secondary color\n    },\n  },\n});\n\ninterface Scholarship {\n  id: number;\n  scholarshipID: number;\n  applications: number[];\n  awardedApplications: number[];\n  awardAmount: number;\n  sponsorID: string;\n  numberAvailable: number;\n  majors: string;\n  minors: string;\n  gpa: number;\n  deadline: Date;\n  otherRequirements: string;\n  scholarshipName: string;\n}\n\nconst columns: GridColDef[] = [\n  { field: 'scholarshipName', headerName: 'Scholarship Name', width: 200 },\n  { field: 'awardAmount', headerName: 'Award Amount', width: 150 },\n  { field: 'numberAvailable', headerName: 'Number Available', width: 180 },\n  { field: 'deadline', headerName: 'Deadline', width: 150 },\n];\n\nexport default function Scholarships() {\n  const [rows, setRows] = useState<Scholarship[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8000/getallscholarships/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        // Assuming the data structure is { scholarships: Scholarship[] }\n        if (data && data.scholarships) {\n          setRows(data.scholarships);\n        } else {\n          console.error('Invalid data structure in API response:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    try {\n      const password = data.get('password') as string;\n      if (password !== null) {\n        const hashedPassword = await sha256(password);\n        console.log(\"Hashed Password\", hashedPassword);\n\n        const response = await axios.post('http://localhost:8000/login/', {\n          username: data.get('username'),\n          password: hashedPassword,\n        });\n        console.log(response.data);\n        if (response.status === 200) {\n          // storing the DB keys in session storage for the user / student\n          for (const key in response.data) {\n            sessionStorage.setItem(key, response.data[key]);\n          }\n          window.location.href = '/home';\n        } else {\n          // Display error message\n          alert('Invalid username or password');\n        }\n      }\n     \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <div style={{\n        backgroundImage: 'url(/UofA1.jpeg)',\n        backgroundSize: 'cover',\n        height: '100vh',\n      }}>\n        <CssBaseline />\n        <Container component=\"main\" maxWidth=\"lg\">\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <SchoolIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Scholarships\n            </Typography>\n            <div style={{ height: 400, width: '100%' }}>\n              <DataGrid\n                rows={rows}\n                columns={columns}\n                checkboxSelection\n              />\n            </div>\n          </Box>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAoB,kBAAkB;AACvD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AACvE,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,4BAA4B;AAOnD,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE,SAAS,CAAE;IACnB;EACF;AACF,CAAC,CAAC;AAkBF,MAAME,OAAqB,GAAG,CAC5B;EAAEC,KAAK,EAAE,iBAAiB;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACxE;EAAEF,KAAK,EAAE,aAAa;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EAChE;EAAEF,KAAK,EAAE,iBAAiB;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACxE;EAAEF,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC1D;AAED,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAgB,EAAE,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,eAAe2B,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;QACzE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC;QACA,IAAID,IAAI,IAAIA,IAAI,CAACE,YAAY,EAAE;UAC7BR,OAAO,CAACM,IAAI,CAACE,YAAY,CAAC;QAC5B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEJ,IAAI,CAAC;QAChE;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IACAT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,YAAY,GAAG,MAAOC,KAAuC,IAAK;IACtEA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMP,IAAI,GAAG,IAAIQ,QAAQ,CAACF,KAAK,CAACG,aAAa,CAAC;IAE9C,IAAI;MACF,MAAMC,QAAQ,GAAGV,IAAI,CAACW,GAAG,CAAC,UAAU,CAAW;MAC/C,IAAID,QAAQ,KAAK,IAAI,EAAE;QACrB,MAAME,cAAc,GAAG,MAAMjC,MAAM,CAAC+B,QAAQ,CAAC;QAC7CP,OAAO,CAACU,GAAG,CAAC,iBAAiB,EAAED,cAAc,CAAC;QAE9C,MAAMhB,QAAQ,GAAG,MAAMkB,KAAK,CAACC,IAAI,CAAC,8BAA8B,EAAE;UAChEC,QAAQ,EAAEhB,IAAI,CAACW,GAAG,CAAC,UAAU,CAAC;UAC9BD,QAAQ,EAAEE;QACZ,CAAC,CAAC;QACFT,OAAO,CAACU,GAAG,CAACjB,QAAQ,CAACI,IAAI,CAAC;QAC1B,IAAIJ,QAAQ,CAACqB,MAAM,KAAK,GAAG,EAAE;UAC3B;UACA,KAAK,MAAMC,GAAG,IAAItB,QAAQ,CAACI,IAAI,EAAE;YAC/BmB,cAAc,CAACC,OAAO,CAACF,GAAG,EAAEtB,QAAQ,CAACI,IAAI,CAACkB,GAAG,CAAC,CAAC;UACjD;UACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;QAChC,CAAC,MAAM;UACL;UACAC,KAAK,CAAC,8BAA8B,CAAC;QACvC;MACF;IAEF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEvB,OAAA,CAACL,aAAa;IAACiD,KAAK,EAAE3C,YAAa;IAAA4C,QAAA,eACjC7C,OAAA;MAAK8C,KAAK,EAAE;QACVC,eAAe,EAAE,kBAAkB;QACnCC,cAAc,EAAE,OAAO;QACvBC,MAAM,EAAE;MACV,CAAE;MAAAJ,QAAA,gBACA7C,OAAA,CAACT,WAAW;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfrD,OAAA,CAACV,SAAS;QAACgE,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAC,IAAI;QAAAV,QAAA,eACvC7C,OAAA,CAACP,GAAG;UACF+D,EAAE,EAAE;YACFC,SAAS,EAAE,CAAC;YACZC,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBC,UAAU,EAAE;UACd,CAAE;UAAAf,QAAA,gBAEF7C,OAAA,CAACJ,MAAM;YAAC4D,EAAE,EAAE;cAAEK,CAAC,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAiB,CAAE;YAAAjB,QAAA,eAC9C7C,OAAA,CAACH,UAAU;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACTrD,OAAA,CAACR,UAAU;YAAC8D,SAAS,EAAC,IAAI;YAACS,OAAO,EAAC,IAAI;YAAAlB,QAAA,EAAC;UAExC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbrD,OAAA;YAAK8C,KAAK,EAAE;cAAEG,MAAM,EAAE,GAAG;cAAExC,KAAK,EAAE;YAAO,CAAE;YAAAoC,QAAA,eACzC7C,OAAA,CAACX,QAAQ;cACPuB,IAAI,EAAEA,IAAK;cACXN,OAAO,EAAEA,OAAQ;cACjB0D,iBAAiB;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAAC1C,EAAA,CA3FuBD,YAAY;AAAAuD,EAAA,GAAZvD,YAAY;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}