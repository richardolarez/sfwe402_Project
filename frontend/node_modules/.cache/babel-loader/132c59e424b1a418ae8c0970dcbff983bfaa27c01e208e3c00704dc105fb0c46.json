{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/pages/mui-components/protectedroute.tsx\",\n  _s = $RefreshSig$();\n// protectedroute.tsx\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const sessionVariableExists = sessionStorage.getItem('type');\n  if (!sessionVariableExists) {\n    // Redirect to signin page if session variable does not exist\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/signin\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the children components if session variable exists\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","_s","location","sessionVariableExists","sessionStorage","getItem","to","state","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/pages/mui-components/protectedroute.tsx"],"sourcesContent":["// protectedroute.tsx\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\ninterface ProtectedRouteProps {\n children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n const location = useLocation();\n const sessionVariableExists = sessionStorage.getItem('type');\n\n if (!sessionVariableExists) {\n    // Redirect to signin page if session variable does not exist\n    return <Navigate to=\"/signin\" state={{ from: location }} />;\n }\n\n // Render the children components if session variable exists\n return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMzD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,qBAAqB,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;EAE5D,IAAI,CAACF,qBAAqB,EAAE;IACzB;IACA,oBAAOP,OAAA,CAACH,QAAQ;MAACa,EAAE,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEN;MAAS;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9D;;EAEA;EACA,oBAAOhB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACvB,CAAC;AAACC,EAAA,CAXIF,cAA6C;EAAA,QACjCL,WAAW;AAAA;AAAAmB,EAAA,GADvBd,cAA6C;AAanD,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}