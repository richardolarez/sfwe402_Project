{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/pages/mui-components/muitableapplications.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select'; // Import Select\nimport MenuItem from '@mui/material/MenuItem'; // Import MenuItem\nimport Grid from '@mui/material/Grid';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Define the MuiTable component\nexport default function MuiTable({\n  endpoint,\n  filter\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [sortField, setSortField] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [hoveredRow, setHoveredRow] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedApplication, setselectedApplication] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [applicationID, setApplicationID] = useState('');\n  const [netID, setNetID] = useState('');\n  const [scholarshipID, setScholarshipID] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [timestamp, setTimestamp] = useState('');\n  const [essay, setEssay] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const [recommendationLetter, setRecommendationLetter] = useState('');\n  const [status, setStatus] = useState('');\n  const [scholarshipArray, setScholarships] = useState({});\n  const [matchScore, setMatchScore] = useState(null);\n  const [isStudent, setIsStudent] = useState(false);\n  const location = useLocation();\n  const fetchData = async () => {\n    try {\n      console.log('Fetching data from:', endpoint); // Debug: Log the endpoint URL\n      const response = await axios.get(endpoint);\n      console.log('First API response:', response.data); // Debug: Log the response data\n      const {\n        applications\n      } = response.data;\n      let applications_two;\n      if (!applications || applications.length === 0) {\n        console.error('No applications data received.');\n        return; // Exit the function if no data\n      }\n      if (isStudent || sessionStorage.type === 'Student') {\n        const filteredApplications = applications.filter(application => application.netID === sessionStorage.net_id);\n        setTableData(filteredApplications);\n        setIsStudent(true);\n        applications_two = filteredApplications;\n      } else {\n        setTableData(applications); // Store the fetched data in tableData\n        setIsStudent(false);\n        applications_two = applications;\n      }\n\n      // Extract applicationIDs from the fetched data\n      const applicationIds = applications_two.map(application => application.applicationID);\n\n      // Make the second request using the extracted applicationIDs\n      const scholarshipsResponse = await axios.get(`http://localhost:8000/getscholarshipsfromapplications/${applicationIds.join(',')}/`);\n      const scholarships = scholarshipsResponse.data.scholarships;\n\n      // Assuming scholarships is the array of scholarships you've fetched\n      const scholarshipArray = scholarships.reduce((acc, scholarship) => {\n        acc[scholarship.applicationID] = scholarship.scholarshipName;\n        return acc;\n      }, {});\n      const applicationsWithScholarshipNames = applications_two.map(application => {\n        return {\n          ...application,\n          scholarshipName: scholarshipArray[application.applicationID]\n        };\n      });\n      console.log('Applications with scholarship names:', applicationsWithScholarshipNames);\n\n      // Update tableData with the enriched applications\n      setTableData(applicationsWithScholarshipNames);\n    } catch (error) {\n      console.error('Error fetching data or scholarships:', error);\n      // Consider setting some state or showing a message to the user here\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [endpoint]); // Re-fetch data if the endpoint changes\n\n  useEffect(() => {\n    if (selectedApplication) {\n      setApplicationID(selectedApplication.applicationID.toString());\n      setNetID(selectedApplication.netID);\n      setScholarshipID(selectedApplication.scholarshipID.toString());\n      setFirstName(selectedApplication.firstName);\n      setLastName(selectedApplication.lastName);\n      setTimestamp(selectedApplication.timestamp);\n      setEssay(selectedApplication.essay);\n      setTranscript(selectedApplication.transcript);\n      setRecommendationLetter(selectedApplication.recommendationLetter);\n      setStatus(selectedApplication.status.toString());\n      setMatchScore(typeof selectedApplication.matchScore === 'number' ? selectedApplication.matchScore : null);\n    }\n  }, [selectedApplication]);\n  const modifyApplicationData = {\n    \"applicationID\": applicationID,\n    \"netID\": netID,\n    \"scholarshipID\": scholarshipID,\n    \"firstName\": firstName,\n    \"lastName\": lastName,\n    \"timestamp\": timestamp,\n    \"matchScore\": matchScore,\n    \"essay\": essay,\n    \"transcript\": transcript,\n    \"recommendationLetter\": recommendationLetter,\n    \"status\": status\n  };\n\n  // Parse the filter string into an object\n  const filters = filter.split('&').reduce((acc, item) => {\n    const [key, value] = item.split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n\n  // Filter function to filter the data based on the filters object\n  const filteredData = tableData.filter(row => {\n    return Object.entries(filters).every(([key, value]) => {\n      switch (key) {\n        case 'scholarship':\n          return row.scholarshipName.toString().toLowerCase().includes(value.toLowerCase());\n        case 'netID':\n          return row.netID.toLowerCase().includes(value.toLowerCase());\n        case 'name':\n          return row.firstName.toLowerCase().includes(value.toLowerCase()) || row.lastName.toLowerCase().includes(value.toLowerCase());\n        case 'status':\n          //In Progress, Submitted, Under Review, Rejected, Awarded\n          if (value === 'In Progress') {\n            return row.status === 'In Progress';\n          }\n          if (value === 'Submitted') {\n            return row.status === 'Submitted';\n          }\n          if (value === 'Under Review') {\n            return row.status === 'Under Review';\n          }\n          if (value === 'Rejected') {\n            return row.status === 'Rejected';\n          }\n          if (value === 'Awarded') {\n            return row.status === 'Awarded';\n          }\n          if (value === 'All') {\n            return true;\n          }\n          return true;\n        default:\n          return true;\n      }\n    });\n  });\n\n  // Sort function\n  const sortData = (data, field, direction) => {\n    return [...data].sort((a, b) => {\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1;\n      }\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n  };\n\n  // Sort the filtered data\n  const sortedData = sortData(filteredData, sortField, sortDirection);\n\n  // Function to handle header click\n  const handleHeaderClick = field => {\n    const newDirection = sortField === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortField(field);\n    setSortDirection(newDirection);\n  };\n\n  // Function to handle row click\n  const handleRowClick = applicationID => {\n    // Find the user with the specified ID\n    const application = tableData.find(application => application.applicationID === applicationID);\n    console.log(application);\n\n    // If the user is found, set it to the selectedApplication state\n    if (application) {\n      setselectedApplication(application);\n      setIsModalOpen(true); // Open the modal\n    } else {\n      console.error(`application with ID ${applicationID} not found.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        backgroundColor: \"#FAFAFA\",\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('scholarship'),\n              children: [\"Scholarship \", sortField === 'scholarship' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('firstName'),\n              children: [\"First \", sortField === 'firstName' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('lastName'),\n              children: [\"Last \", sortField === 'lastName' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 13\n            }, this), location.pathname === '/applications' && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('timestamp'),\n              children: [\"Date Submitted \", sortField === 'timestamp' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), location.pathname === '/applicantmatch' && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('matchScore'),\n              children: [\"Match Score \", sortField === 'timestamp' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              style: {\n                verticalAlign: \"top\",\n                width: \"10%\"\n              },\n              onClick: () => handleHeaderClick('status'),\n              children: [\"Status \", sortField === 'status' && (sortDirection === 'asc' ? '↑' : '↓')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            height: 'fit-content'\n          },\n          children: sortedData.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            onMouseEnter: () => setHoveredRow(row.applicationID),\n            onMouseLeave: () => setHoveredRow(null),\n            onClick: () => handleRowClick(row.applicationID),\n            style: {\n              backgroundColor: hoveredRow === row.userID ? 'lightblue' : 'inherit',\n              cursor: hoveredRow === row.userID ? 'pointer' : 'default'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.scholarshipName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 11\n            }, this), location.pathname === '/applications' && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: new Date(row.timestamp).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 11\n            }, this), location.pathname === '/applicantmatch' && /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.matchScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 11\n            }, this)]\n          }, row.applicationID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      \"aria-labelledby\": \"modal-title\",\n      \"aria-describedby\": \"modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 600,\n          bgcolor: 'background.paper',\n          border: '2px solid #000',\n          boxShadow: 24,\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Application Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"div\",\n          id: \"modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: selectedApplication && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"Scholarship: \", selectedApplication.scholarshipName, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 28\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [\"Applicant: \", selectedApplication.firstName, \" \", selectedApplication.lastName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 28\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), location.pathname === '/applicantmatch' && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Match Score\",\n                    type: \"number\",\n                    value: matchScore,\n                    onChange: e => setMatchScore(e.target.value === '' ? null : Number(e.target.value)),\n                    InputProps: {\n                      inputProps: {\n                        min: 0,\n                        // Assuming match score cannot be negative\n                        step: 1 // Increment/decrement by 1\n                      }\n                    },\n                    variant: \"outlined\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Net ID: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 28\n                    }, this), selectedApplication.netID]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Date Submitted: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 28\n                    }, this), selectedApplication.timestamp]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"label-status\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"label-status\",\n                    value: status,\n                    onChange: e => setStatus(e.target.value),\n                    label: \"Status\",\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"In Progress\",\n                      children: \"In Progress\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Submitted\",\n                      children: \"Submitted\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Under Review\",\n                      children: \"Under Review\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Rejected\",\n                      children: \"Rejected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Awarded\",\n                      children: \"Awarded\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Essay\",\n                    defaultValue: selectedApplication.essay,\n                    value: essay,\n                    onChange: e => setEssay(e.target.value),\n                    multiline: true,\n                    rows: 4 // Adjust based on your needs\n                    ,\n                    InputProps: {\n                      style: {\n                        maxHeight: '100px',\n                        // Adjust this value based on your needs\n                        overflow: 'auto' // Enable scrolling if content exceeds maxHeight\n                      }\n                    },\n                    variant: \"outlined\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Transcript\",\n                    defaultValue: selectedApplication.transcript,\n                    value: transcript,\n                    onChange: e => setTranscript(e.target.value),\n                    multiline: true,\n                    rows: 4 // Adjust based on your needs\n                    ,\n                    InputProps: {\n                      style: {\n                        maxHeight: '100px',\n                        // Adjust this value based on your needs\n                        overflow: 'auto' // Enable scrolling if content exceeds maxHeight\n                      }\n                    },\n                    variant: \"outlined\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"recommendationLetter\",\n                    defaultValue: selectedApplication.recommendationLetter,\n                    value: recommendationLetter,\n                    onChange: e => setRecommendationLetter(e.target.value),\n                    multiline: true,\n                    rows: 4 // Adjust based on your needs\n                    ,\n                    InputProps: {\n                      style: {\n                        maxHeight: '100px',\n                        // Adjust this value based on your needs\n                        overflow: 'auto' // Enable scrolling if content exceeds maxHeight\n                      }\n                    },\n                    variant: \"outlined\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Scholarship: \", selectedApplication.scholarshipName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Applicant: \", selectedApplication.firstName, \" \", selectedApplication.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), location.pathname === '/applicantmatch' && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Match Score: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 24\n                }, this), selectedApplication.matchScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Net ID: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 22\n                }, this), selectedApplication.netID]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date Submitted: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 22\n                }, this), new Date(selectedApplication.timestamp).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 22\n                }, this), selectedApplication.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '100%',\n            mt: 2 // Add some margin at the top if needed\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsModalOpen(false),\n            sx: {\n              backgroundColor: '#ab0520',\n              ':hover': {\n                backgroundColor: 'lightblue' // Change this to your desired hover color\n              }\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: async () => {\n              if (isEditMode) {\n                // Assuming you have the necessary data ready to send in the POST request\n                try {\n                  // Replace 'yourEndpoint' with the actual endpoint you're sending the POST request to\n                  // and replace 'yourData' with the actual data you're sending\n                  const response = await axios.put(`http://localhost:8000/updateApplication/${selectedApplication === null || selectedApplication === void 0 ? void 0 : selectedApplication.applicationID}`, modifyApplicationData);\n                  if (response.status === 200) {\n                    // If the POST request is successful, show a confirmation popup\n                    alert('Successfully modified application data.\\nRefresh the page to see changes.');\n                    setIsEditMode(false); // Exit edit mode\n                  } else {\n                    alert('Failed to save changes. Please try again.');\n                  }\n                } catch (error) {\n                  console.error('Error sending POST request:', error);\n                  alert('Failed to save changes. Please try again.');\n                }\n              } else {\n                setIsEditMode(true); // Enter edit mode\n              }\n            },\n            sx: {\n              backgroundColor: isEditMode ? '#ab0520' : '#000',\n              ':hover': {\n                backgroundColor: 'lightblue' // Change this to your desired hover color\n              }\n            },\n            children: isEditMode ? 'Save' : 'Modify'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MuiTable, \"HIRDKXgL1nST7i456SugfmPnDDE=\", false, function () {\n  return [useLocation];\n});\n_c = MuiTable;\nvar _c;\n$RefreshReg$(_c, \"MuiTable\");","map":{"version":3,"names":["useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","Box","Typography","Button","TextField","InputLabel","Select","MenuItem","Grid","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","MuiTable","endpoint","filter","_s","tableData","setTableData","sortField","setSortField","sortDirection","setSortDirection","hoveredRow","setHoveredRow","isModalOpen","setIsModalOpen","selectedApplication","setselectedApplication","isEditMode","setIsEditMode","applicationID","setApplicationID","netID","setNetID","scholarshipID","setScholarshipID","firstName","setFirstName","lastName","setLastName","timestamp","setTimestamp","essay","setEssay","transcript","setTranscript","recommendationLetter","setRecommendationLetter","status","setStatus","scholarshipArray","setScholarships","matchScore","setMatchScore","isStudent","setIsStudent","location","fetchData","console","log","response","get","data","applications","applications_two","length","error","sessionStorage","type","filteredApplications","application","net_id","applicationIds","map","scholarshipsResponse","join","scholarships","reduce","acc","scholarship","scholarshipName","applicationsWithScholarshipNames","toString","modifyApplicationData","filters","split","item","key","value","filteredData","row","Object","entries","every","toLowerCase","includes","sortData","field","direction","sort","a","b","sortedData","handleHeaderClick","newDirection","handleRowClick","find","children","component","style","backgroundColor","width","cursor","align","verticalAlign","onClick","fileName","_jsxFileName","lineNumber","columnNumber","pathname","height","onMouseEnter","onMouseLeave","userID","Date","toLocaleDateString","open","onClose","sx","position","top","left","transform","bgcolor","border","boxShadow","p","id","variant","mt","container","spacing","xs","sm","label","onChange","e","target","Number","InputProps","inputProps","min","step","fullWidth","labelId","defaultValue","multiline","rows","maxHeight","overflow","display","justifyContent","put","alert","_c","$RefreshReg$"],"sources":["/app/frontend/src/pages/mui-components/muitableapplications.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select'; // Import Select\nimport MenuItem from '@mui/material/MenuItem'; // Import MenuItem\nimport Grid from '@mui/material/Grid';\nimport { useLocation } from 'react-router-dom';\n\ninterface Application {\n  [key: string]: string | number;\n  applicationID: number;\n  netID: string;\n  scholarshipID: number;\n  scholarshipName: string;\n  firstName: string;\n  lastName: string;\n  timestamp: string;\n  essay: string;\n  transcript: string;\n  recommendationLetter: string;\n  status: string;\n}\n\ninterface Scholarship {\n  applicationID: number;\n  scholarshipName: string;\n }\n\n// Define the MuiTable component\nexport default function MuiTable({ endpoint, filter }: { endpoint: string; filter: string; }) {\n  const [tableData, setTableData] = useState<Application[]>([]);\n  const [sortField, setSortField] = useState<string>('');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [hoveredRow, setHoveredRow] = useState<number | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedApplication, setselectedApplication] = useState<Application | null>(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [applicationID, setApplicationID] = useState('');\n  const [netID, setNetID] = useState('');\n  const [scholarshipID, setScholarshipID] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [timestamp, setTimestamp] = useState('');\n  const [essay, setEssay] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const [recommendationLetter, setRecommendationLetter] = useState('');\n  const [status, setStatus] = useState('');\n  const [scholarshipArray, setScholarships] = useState<Record<number, string>>({});\n  const [matchScore, setMatchScore] = useState<number | null>(null);\n  const [isStudent, setIsStudent] = useState(false);\n\n  const location = useLocation();\n\n  const fetchData = async () => {\n    try {\n       console.log('Fetching data from:', endpoint); // Debug: Log the endpoint URL\n       const response = await axios.get(endpoint);\n       console.log('First API response:', response.data); // Debug: Log the response data\n       const { applications } = response.data;\n       let applications_two: Application[];\n       if (!applications || applications.length === 0) {\n         console.error('No applications data received.');\n         return; // Exit the function if no data\n       }\n       if (isStudent || sessionStorage.type === 'Student') {\n        const filteredApplications = applications.filter((application: Application) => application.netID === sessionStorage.net_id);\n        setTableData(filteredApplications);\n        setIsStudent(true);\n        applications_two = filteredApplications;\n       } \n       else {  \n        setTableData(applications); // Store the fetched data in tableData\n        setIsStudent(false);\n        applications_two = applications;\n       }\n\n       // Extract applicationIDs from the fetched data\n       const applicationIds = applications_two.map((application: Application) => application.applicationID);\n   \n       // Make the second request using the extracted applicationIDs\n       const scholarshipsResponse = await axios.get(`http://localhost:8000/getscholarshipsfromapplications/${applicationIds.join(',')}/`);\n       const scholarships = scholarshipsResponse.data.scholarships;\n   \n      // Assuming scholarships is the array of scholarships you've fetched\n      const scholarshipArray = scholarships.reduce((acc: Record<number, string>, scholarship: Scholarship) => {\n        acc[scholarship.applicationID] = scholarship.scholarshipName;\n        return acc;\n       }, {} as Record<number, string>);\n   \n       const applicationsWithScholarshipNames = applications_two.map((application: Application) => {\n          return {\n            ...application,\n            scholarshipName: scholarshipArray[application.applicationID],\n          };\n       });\n\n       console.log('Applications with scholarship names:', applicationsWithScholarshipNames);\n   \n       // Update tableData with the enriched applications\n       setTableData(applicationsWithScholarshipNames);\n\n    } catch (error) {\n       console.error('Error fetching data or scholarships:', error);\n       // Consider setting some state or showing a message to the user here\n    }\n   };\n\n  useEffect(() => {\n    fetchData();\n   }, [endpoint]); // Re-fetch data if the endpoint changes\n\n  useEffect(() => {\n    if (selectedApplication) {\n      setApplicationID(selectedApplication.applicationID.toString());\n      setNetID(selectedApplication.netID);\n      setScholarshipID(selectedApplication.scholarshipID.toString());\n      setFirstName(selectedApplication.firstName);\n      setLastName(selectedApplication.lastName);\n      setTimestamp(selectedApplication.timestamp);\n      setEssay(selectedApplication.essay);\n      setTranscript(selectedApplication.transcript);\n      setRecommendationLetter(selectedApplication.recommendationLetter);\n      setStatus(selectedApplication.status.toString());\n      setMatchScore(typeof selectedApplication.matchScore === 'number' ? selectedApplication.matchScore : null);\n    }\n  }, [selectedApplication]);\n\n  const modifyApplicationData = {\n    \"applicationID\": applicationID,\n    \"netID\": netID,\n    \"scholarshipID\": scholarshipID,\n    \"firstName\": firstName,\n    \"lastName\": lastName,\n    \"timestamp\": timestamp,\n    \"matchScore\": matchScore,\n    \"essay\": essay,\n    \"transcript\": transcript,\n    \"recommendationLetter\": recommendationLetter,\n    \"status\": status,\n   };\n\n  // Parse the filter string into an object\n  const filters = filter.split('&').reduce((acc, item) => {\n    const [key, value] = item.split('=');\n    acc[key] = value;\n    return acc;\n  }, {} as Record<string, string>);\n\n  // Filter function to filter the data based on the filters object\n  const filteredData = tableData.filter(row => {\n  return Object.entries(filters).every(([key, value]) => {\n    switch (key) {\n      case 'scholarship':\n          return row.scholarshipName.toString().toLowerCase().includes(value.toLowerCase());\n      case 'netID':\n          return row.netID.toLowerCase().includes(value.toLowerCase());\n      case 'name':\n          return row.firstName.toLowerCase().includes(value.toLowerCase()) || row.lastName.toLowerCase().includes(value.toLowerCase());\n      case 'status':\n        //In Progress, Submitted, Under Review, Rejected, Awarded\n          if (value === 'In Progress') {\n            return row.status === 'In Progress';\n          }\n          if (value === 'Submitted') {\n            return row.status === 'Submitted';\n          }\n          if (value === 'Under Review') {\n            return row.status === 'Under Review';\n          }\n          if (value === 'Rejected') {\n            return row.status === 'Rejected';\n          }\n          if (value === 'Awarded') {\n            return row.status === 'Awarded';\n          }\n          if (value === 'All') {\n            return true;\n          }\n          return true;\n      default:\n        return true;\n    }\n  });\n  });\n\n  // Sort function\n  const sortData = (data: Application[], field: string, direction: 'asc' | 'desc') => {\n    return [...data].sort((a, b) => {\n      if (a[field] < b[field]) {\n        return direction === 'asc' ? -1 : 1;\n      }\n      if (a[field] > b[field]) {\n        return direction === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n  };\n\n  // Sort the filtered data\n  const sortedData = sortData(filteredData, sortField, sortDirection);\n\n  // Function to handle header click\n  const handleHeaderClick = (field: string) => {\n    const newDirection = sortField === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortField(field);\n    setSortDirection(newDirection);\n  };\n\n  // Function to handle row click\n  const handleRowClick = (applicationID: number) => {\n    // Find the user with the specified ID\n    const application = tableData.find(application => application.applicationID === applicationID);\n    console.log(application);\n  \n    // If the user is found, set it to the selectedApplication state\n    if (application) {\n      setselectedApplication(application);\n      setIsModalOpen(true); // Open the modal\n    } else {\n      console.error(`application with ID ${applicationID} not found.`);\n    }\n  };\n\n  return (\n    <>\n    <TableContainer component={Paper} style={{ backgroundColor: \"#FAFAFA\", width: '100%'}}>\n      <Table aria-label=\"simple table\">\n      <TableHead>\n        <TableRow style={{ cursor: 'pointer' }}>\n            <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('scholarship')}>\n              Scholarship {sortField === 'scholarship' && (sortDirection === 'asc' ? '↑' : '↓')}\n            </TableCell>\n            <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('firstName')}>\n              First {sortField === 'firstName' && (sortDirection === 'asc' ? '↑' : '↓')}\n            </TableCell>\n            <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('lastName')}>\n              Last {sortField === 'lastName' && (sortDirection === 'asc' ? '↑' : '↓')}\n            </TableCell>\n            {location.pathname === '/applications' && (\n              <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('timestamp')}>\n                  Date Submitted {sortField === 'timestamp' && (sortDirection === 'asc' ? '↑' : '↓')}\n              </TableCell>\n            )}\n            {location.pathname === '/applicantmatch' && (\n              <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('matchScore')}>\n                  Match Score {sortField === 'timestamp' && (sortDirection === 'asc' ? '↑' : '↓')}\n              </TableCell>\n            )}\n            <TableCell align=\"center\" style={{ verticalAlign: \"top\", width: \"10%\" }} onClick={() => handleHeaderClick('status')}>\n              Status {sortField === 'status' && (sortDirection === 'asc' ? '↑' : '↓')}\n            </TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody style={{height: 'fit-content'}}>\n      {sortedData.map((row) => (\n        <TableRow\n          key={row.applicationID}\n          onMouseEnter={() => setHoveredRow(row.applicationID)}\n          onMouseLeave={() => setHoveredRow(null)}\n          onClick={() => handleRowClick(row.applicationID)}\n          style={{ backgroundColor: hoveredRow === row.userID ? 'lightblue' : 'inherit', cursor: hoveredRow === row.userID ? 'pointer' : 'default' }}\n        >\n          <TableCell align=\"center\">\n            {row.scholarshipName}\n          </TableCell> \n          <TableCell align=\"center\">{row.firstName}</TableCell>\n          <TableCell align=\"center\">{row.lastName}</TableCell>\n          {location.pathname === '/applications' && (\n          <TableCell align=\"center\">{new Date(row.timestamp).toLocaleDateString()}</TableCell>\n          )}\n          {location.pathname === '/applicantmatch' && (\n          <TableCell align=\"center\">{row.matchScore}</TableCell>\n          )}\n          <TableCell align=\"center\">{row.status}</TableCell>\n        </TableRow>\n      ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      <Modal\n        open={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n        >\n        <Box sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 600,\n            bgcolor: 'background.paper',\n            border: '2px solid #000',\n            boxShadow: 24,\n            p: 4,\n      }}>\n      <Typography id=\"modal-title\" variant=\"h6\" component=\"h2\">\n        Application Details\n      </Typography>\n      <Typography component=\"div\" id=\"modal-description\" sx={{ mt: 2 }}>\n        {selectedApplication && (\n          <div>\n            {isEditMode ? (\n              <>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                      <div><strong>Scholarship: {selectedApplication.scholarshipName} </strong></div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <div><strong>Applicant: {selectedApplication.firstName} {selectedApplication.lastName}</strong></div>\n                    </Grid>\n                    {location.pathname === '/applicantmatch' && (\n                      <Grid item xs={12} sm={6}>\n                      <TextField\n                        label=\"Match Score\"\n                        type=\"number\"\n                        value={matchScore}\n                        onChange={(e) => setMatchScore(e.target.value === '' ? null : Number(e.target.value))}\n                        InputProps={{\n                          inputProps: {\n                            min: 0, // Assuming match score cannot be negative\n                            step: 1, // Increment/decrement by 1\n                          },\n                        }}\n                        variant=\"outlined\"\n                        fullWidth\n                        />\n                      </Grid>\n                    )}\n                    <Grid item xs={6} sm={12}>\n                      <div><strong>Net ID: </strong>{selectedApplication.netID}</div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <div><strong>Date Submitted: </strong>{selectedApplication.timestamp}</div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    <InputLabel id=\"label-status\">Status</InputLabel>\n                    <Select\n                        labelId=\"label-status\"\n                        value={status}\n                        onChange={(e) => setStatus(e.target.value)}\n                        label=\"Status\"\n                    >   \n                            {/* In Progress, Submitted, Under Review, Rejected, Awarded */}\n                        <MenuItem value=\"In Progress\">In Progress</MenuItem>\n                        <MenuItem value=\"Submitted\">Submitted</MenuItem>\n                        <MenuItem value=\"Under Review\">Under Review</MenuItem>\n                        <MenuItem value=\"Rejected\">Rejected</MenuItem>\n                        <MenuItem value=\"Awarded\">Awarded</MenuItem>\n                    </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                    <TextField\n                      label=\"Essay\"\n                      defaultValue={selectedApplication.essay}\n                      value={essay}\n                      onChange={(e) => setEssay(e.target.value)}\n                      multiline\n                      rows={4} // Adjust based on your needs\n                      InputProps={{\n                        style: {\n                          maxHeight: '100px', // Adjust this value based on your needs\n                          overflow: 'auto', // Enable scrolling if content exceeds maxHeight\n                        },\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                      />    \n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField \n                        label=\"Transcript\"\n                        defaultValue={selectedApplication.transcript}\n                        value={transcript}\n                        onChange={(e) => setTranscript(e.target.value)}\n                        multiline\n                        rows={4} // Adjust based on your needs\n                        InputProps={{\n                          style: {\n                            maxHeight: '100px', // Adjust this value based on your needs\n                            overflow: 'auto', // Enable scrolling if content exceeds maxHeight\n                          },\n                        }}\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <TextField label=\"recommendationLetter\" \n                      defaultValue={selectedApplication.recommendationLetter}\n                      value={recommendationLetter}\n                      onChange={(e) => setRecommendationLetter(e.target.value)}\n                      multiline\n                      rows={4} // Adjust based on your needs\n                      InputProps={{\n                        style: {\n                          maxHeight: '100px', // Adjust this value based on your needs\n                          overflow: 'auto', // Enable scrolling if content exceeds maxHeight\n                        },\n                      }}\n                      variant=\"outlined\"\n                      fullWidth\n                      />\n                    </Grid>\n                </Grid>\n              </>\n            ) : (\n              <>\n                <div><strong>Scholarship: {selectedApplication.scholarshipName} </strong></div>\n                <div><strong>Applicant: {selectedApplication.firstName} {selectedApplication.lastName}</strong></div>\n                {location.pathname === '/applicantmatch' && (\n                  <div><strong>Match Score: </strong>{selectedApplication.matchScore}</div>\n                )}\n                <div><strong>Net ID: </strong>{selectedApplication.netID}</div>\n                <div><strong>Date Submitted: </strong>{new Date(selectedApplication.timestamp).toLocaleDateString()}</div>\n                <div><strong>Status: </strong>{selectedApplication.status}</div>\n              </>\n            )}\n          </div>\n        )}\n      </Typography>\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n        mt: 2, // Add some margin at the top if needed\n      }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => setIsModalOpen(false)}\n          sx={{\n            backgroundColor: '#ab0520',\n            ':hover': {\n              backgroundColor: 'lightblue', // Change this to your desired hover color\n            },\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={async () => {\n              if (isEditMode) {\n                // Assuming you have the necessary data ready to send in the POST request\n                try {\n                  // Replace 'yourEndpoint' with the actual endpoint you're sending the POST request to\n                    // and replace 'yourData' with the actual data you're sending\n                    const response = await axios.put(`http://localhost:8000/updateApplication/${selectedApplication?.applicationID}`, modifyApplicationData);if (response.status === 200) {\n                    // If the POST request is successful, show a confirmation popup\n                    alert('Successfully modified application data.\\nRefresh the page to see changes.');\n                    setIsEditMode(false); // Exit edit mode\n                  } else {\n                    alert('Failed to save changes. Please try again.');\n                  }\n                } catch (error) {\n                  console.error('Error sending POST request:', error);\n                  alert('Failed to save changes. Please try again.');\n                }\n              } else {\n                setIsEditMode(true); // Enter edit mode\n              }\n          }}\n          sx={{\n              backgroundColor: isEditMode ? '#ab0520' : '#000',\n              ':hover': {\n                backgroundColor: 'lightblue', // Change this to your desired hover color\n              },\n          }}\n          >\n          {isEditMode ? 'Save' : 'Modify'}\n        </Button>\n      </Box>\n  </Box>\n  </Modal>\n    </>\n );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}