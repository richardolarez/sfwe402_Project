{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/pages/scholarships.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'scholarshipID',\n  headerName: 'Scholarship ID',\n  width: 150\n}, {\n  field: 'applications.length',\n  headerName: 'Applications',\n  width: 150\n}, {\n  field: 'awardedApplications.length',\n  headerName: 'Awarded Applications',\n  width: 200\n}, {\n  field: 'awardAmount',\n  headerName: 'Award Amount',\n  width: 150\n}, {\n  field: 'sponsorID',\n  headerName: 'Sponsor ID',\n  width: 150\n}, {\n  field: 'numberAvailable',\n  headerName: 'Number Available',\n  width: 180\n}, {\n  field: 'majors',\n  headerName: 'Majors',\n  width: 150\n}, {\n  field: 'minors',\n  headerName: 'Minors',\n  width: 150\n}, {\n  field: 'gpa',\n  headerName: 'GPA',\n  width: 100\n}, {\n  field: 'deadline',\n  headerName: 'Deadline',\n  width: 150\n}, {\n  field: 'otherRequirements',\n  headerName: 'Other Requirements',\n  width: 200\n}];\nexport default function Scholarships() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8000/getallscholarships/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setRows(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Scholarships, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = Scholarships;\nvar _c;\n$RefreshReg$(_c, \"Scholarships\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","jsxDEV","_jsxDEV","columns","field","headerName","width","Scholarships","_s","rows","setRows","fetchData","response","fetch","ok","Error","data","json","error","console","style","height","children","checkboxSelection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/pages/scholarships.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\ninterface Scholarship {\n  scholarshipID: string;\n  applications: number[];\n  awardedApplications: number[];\n  awardAmount: number;\n  sponsorID: string;\n  numberAvailable: number;\n  majors: string[];\n  minors: string[];\n  gpa: number;\n  deadline: string;\n  otherRequirements: string;\n}\n\nconst columns: GridColDef[] = [\n  { field: 'scholarshipID', headerName: 'Scholarship ID', width: 150 },\n  { field: 'applications.length', headerName: 'Applications', width: 150 },\n  { field: 'awardedApplications.length', headerName: 'Awarded Applications', width: 200 },\n  { field: 'awardAmount', headerName: 'Award Amount', width: 150 },\n  { field: 'sponsorID', headerName: 'Sponsor ID', width: 150 },\n  { field: 'numberAvailable', headerName: 'Number Available', width: 180 },\n  { field: 'majors', headerName: 'Majors', width: 150 },\n  { field: 'minors', headerName: 'Minors', width: 150 },\n  { field: 'gpa', headerName: 'GPA', width: 100 },\n  { field: 'deadline', headerName: 'Deadline', width: 150 },\n  { field: 'otherRequirements', headerName: 'Other Requirements', width: 200 },\n];\n\nexport default function Scholarships() {\n  const [rows, setRows] = useState<Scholarship[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:8000/getallscholarships/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setRows(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAoB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBxD,MAAMC,OAAqB,GAAG,CAC5B;EAAEC,KAAK,EAAE,eAAe;EAAEC,UAAU,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACpE;EAAEF,KAAK,EAAE,qBAAqB;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EACxE;EAAEF,KAAK,EAAE,4BAA4B;EAAEC,UAAU,EAAE,sBAAsB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACvF;EAAEF,KAAK,EAAE,aAAa;EAAEC,UAAU,EAAE,cAAc;EAAEC,KAAK,EAAE;AAAI,CAAC,EAChE;EAAEF,KAAK,EAAE,WAAW;EAAEC,UAAU,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC5D;EAAEF,KAAK,EAAE,iBAAiB;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,EACxE;EAAEF,KAAK,EAAE,QAAQ;EAAEC,UAAU,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,EACrD;EAAEF,KAAK,EAAE,QAAQ;EAAEC,UAAU,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,EACrD;EAAEF,KAAK,EAAE,KAAK;EAAEC,UAAU,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/C;EAAEF,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAI,CAAC,EACzD;EAAEF,KAAK,EAAE,mBAAmB;EAAEC,UAAU,EAAE,oBAAoB;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC7E;AAED,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAgB,EAAE,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,eAAea,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;QACzE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IACAP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKkB,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEf,KAAK,EAAE;IAAO,CAAE;IAAAgB,QAAA,eACzCpB,OAAA,CAACF,QAAQ;MACPS,IAAI,EAAEA,IAAK;MACXN,OAAO,EAAEA,OAAQ;MACjBoB,iBAAiB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CA5BuBD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}